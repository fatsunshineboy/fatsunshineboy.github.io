(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{281:function(t,s,a){"use strict";a.r(s);var n=a(13),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"git基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git基础"}},[t._v("#")]),t._v(" Git基础")]),t._v(" "),s("h3",{attrs:{id:"git安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git安装"}},[t._v("#")]),t._v(" Git安装")]),t._v(" "),s("ul",[s("li",[t._v("windows从git官网"),s("a",{attrs:{href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"}},[t._v("下载安装程序"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("Linux安装")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v("\n")])])]),s("h3",{attrs:{id:"git配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git配置"}},[t._v("#")]),t._v(" Git配置")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Your Name"')]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"email@example.com"')]),t._v("\n")])])]),s("h3",{attrs:{id:"git使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git使用"}},[t._v("#")]),t._v(" Git使用")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(". 创建版本库\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(". 把文件添加到仓库\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(". 把文件提交到本地仓库\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". -m "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(". 关联远程仓库\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("远程仓库别名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("远程仓库URL"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(".推送到远程仓库"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("-u把本地分支和远程分支关联"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("远程仓库别名"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("h2",{attrs:{id:"git修改文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git修改文件"}},[t._v("#")]),t._v(" Git修改文件")]),t._v(" "),s("h3",{attrs:{id:"版本回退"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#版本回退"}},[t._v("#")]),t._v(" 版本回退")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#版本回退")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard HEAD^\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#记录每一次命令(防止回退错误)")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("注意^与~之间的区别，当存在多个分支时，^可以用来选择分支，HEAD~i永远只选择第i级父节点的第一个分支，HEAD~i^2选择第i级父节点的第二个分支，以此类推；HEAD^=HEAD^1=HEAD~1；如果没有分支，只有一条主线，则HEAD^^^=HEAD^1^1^1=HEAD~3，如果该级节点有第二个分支，则表示为：HEAD^^^2 = HEAD~2^2")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("G   H   I   J\n \\ /     \\ /\n  D   E   F\n   \\  |  / \\\n    \\ | /   |\n     \\|/    |\n      B     C\n       \\   /\n        \\ /\n         A\nA =      = A^0\nB = A^   = A^1     = A~1\nC = A^2  = A^2\nD = A^^  = A^1^1   = A~2\nE = B^2  = A^^2\nF = B^3  = A^^3\nG = A^^^ = A^1^1^1 = A~3\nH = D^2  = B^^2    = A^^^2  = A~2^2\nI = F^   = B^3^    = A^^3^\nJ = F^2  = B^3^2   = A^^3^2\n")])])])]),t._v(" "),s("h3",{attrs:{id:"撤销修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#撤销修改"}},[t._v("#")]),t._v(" 撤销修改")]),t._v(" "),s("p",[t._v("场景1：修改了工作区某个文件的内容，但没有添加到暂存区，想直接丢弃工作区的修改时，用命令"),s("code",[t._v("git restore <filename>")])]),t._v(" "),s("p",[t._v("场景2：当修改了工作区某个文件的内容，还添加到了暂存区时，想丢弃所有修改，分两步，第一步用命令"),s("code",[t._v("git restore --staged <filnamne>")]),t._v("，就回到了场景1，第二步按场景1操作。")]),t._v(" "),s("p",[t._v("场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，使用版本回退")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("--source")]),t._v("可以指定文件 "),s("code",[t._v("git restore <filename> --source HEAD <filename>")])]),t._v(" "),s("li",[t._v("在未给定 source 的情况下，如果使用 "),s("code",[t._v("--staged")]),t._v(" ，从 "),s("code",[t._v("HEAD")]),t._v(" 恢复(覆盖)暂存区，否则从暂存区恢复(覆盖)工作区")])])]),t._v(" "),s("h3",{attrs:{id:"撤销删除"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#撤销删除"}},[t._v("#")]),t._v(" 撤销删除")]),t._v(" "),s("ol",[s("li",[t._v("删除文件")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("1. 手动在工作区删除文件")]),s("br"),t._v("\n使用"),s("code",[t._v("git rm <filename>")]),t._v("和"),s("code",[t._v("git add<filename>")]),t._v("效果一样，都将添加到暂存区"),s("br"),t._v(" "),s("strong",[t._v("2. 直接使用"),s("code",[t._v("git rm <filename>")])]),s("br"),t._v("\n会自动删除工作区的文件，并且直接添加到暂存区")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("撤销删除")])]),t._v(" "),s("blockquote",[s("p",[t._v("方法同"),s("a",{attrs:{href:"#%E6%92%A4%E9%94%80%E4%BF%AE%E6%94%B9"}},[t._v("撤销修改")])])]),t._v(" "),s("h2",{attrs:{id:"git常用命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git常用命令"}},[t._v("#")]),t._v(" Git常用命令")]),t._v(" "),s("ol",[s("li",[t._v("git add")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#一次性添加所有可用的文件")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#增加更新和新创建的文件,忽略删除的文件")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" --ignore-removal "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#增加修改和删除的文件,忽略新创建的文件")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -u\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#通过通配符添加文件")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" *.java\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Git撤销add")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("filename"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("git commit")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#提交所有修改的快照。这个选项只考虑Git中已经添加的文件")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -a\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改最后一次的提交信息")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -amend\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("git commit")]),s("br"),t._v("\n如果没有设置 -m 选项，Git 默认会打开 "),s("RouterLink",{attrs:{to:"/record/Linux命令行.html#_6-vim"}},[t._v("vim")]),t._v(" 提交信息")],1)]),t._v(" "),s("li",[s("p",[s("code",[t._v("git commit -a")]),t._v(" 可以跳过"),s("code",[t._v("git add [file]")]),s("br"),t._v(" "),s("code",[t._v("git commit -a")]),t._v(" 只能提交已经存在的文件，提交新建的文件时会失败")])])])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("git status")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看显示工作目录和暂存区的状态")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status -s "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#紧凑的格式输出状态")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("git status")]),t._v("不显示已经commit到项目历史中去的信息,查看项目历史的信息要使用"),s("code",[t._v("git log")])]),t._v(" "),s("li",[s("code",[t._v("git status -s")]),s("br"),t._v("\n新添加的未跟踪文件前面有 ?? 标记，新添加到暂存区中的文件前面有 A 标记，修改过的文件前面有 M 标记。\nM 有两个可以出现的位置，出现在右边的 M 表示该文件被修改了但是还没放入暂存区，出现在靠左边的 M 表示该文件被修改了并放入了暂存区。")])])]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("git diff")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#显示暂存区和工作区的差异")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#显示暂存区和本地仓库的差异")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --staged "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" $ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --cached "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#显示工作区和本地仓库的差异(HEAD 指向的是本地仓库中最新提交的版本)")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" HEAD\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#显示两个提交之间的差异")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit1-sha"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit2-sha"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Git Diff 比较分支差异")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[s("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("$ git diff HEAD^")]),s("br"),t._v("\n比较 workspace 与最新commit的前一次commit的差异")]),t._v(" "),s("li",[s("code",[t._v("$ git diff HEAD~2")]),s("br"),t._v("\n比较 workspace 与上2次提交的差异，相当于 git diff HEAD~2 HEAD~0，注意两个HEAD的位置，diff显示的结果表示 后一个(HEAD~0) 相对于 前一个的修改(HEAD~2)")])])]),t._v(" "),s("ol",{attrs:{start:"5"}},[s("li",[t._v("git log")])]),t._v(" "),s("h3",{attrs:{id:"git命令图解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git命令图解"}},[t._v("#")]),t._v(" Git命令图解")]),t._v(" "),s("p",[s("img",{attrs:{src:"/imgs/record/git_problem/git%E6%B5%81%E7%A8%8B.png",alt:"git命令"}})]),t._v(" "),s("h2",{attrs:{id:"git可能遇到的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git可能遇到的问题"}},[t._v("#")]),t._v(" Git可能遇到的问题")]),t._v(" "),s("h3",{attrs:{id:"ssh-connect-to-host-github-com-port-22-connection-refused"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ssh-connect-to-host-github-com-port-22-connection-refused"}},[t._v("#")]),t._v(" ssh: connect to host github.com port 22: Connection refused")]),t._v(" "),s("ol",[s("li",[t._v("修改.ssh的配置文件")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" ~/.ssh/config\n\nHost github.com  \nUser xxxxx@xx.com  \nHostname ssh.github.com  \nPreferredAuthentications publickey  \nIdentityFile ~/.ssh/id_rsa  \nPort "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("443")]),t._v("\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("可能依然报错")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("首先到 ipaddress 输入 github.com 查找到其IP地址"),s("br"),t._v("\n将查到的IP地址和网址映射放到你的本地 hosts 文件中即可，例子：140.82.112.4 github.com"),s("br"),t._v("\nPS: windows 下 host 默认地址： C:\\Windows\\System32\\drivers\\etc")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#如果省略远程分支名，则表示将本地分支推送与之存在"追踪关系"的远程分支（通常两者同名），')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果该远程分支不存在，则会被新建。")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("远程主机名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("本地分支名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("远程分支名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("远程主机名"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("远程分支"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("本地分支"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 如果省略本地分支名，则表示删除指定的远程分支，因为这等同于推送一个空的本地分支到远程分支。")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin :master\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等同于")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin --delete master\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);