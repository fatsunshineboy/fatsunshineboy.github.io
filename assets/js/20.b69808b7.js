(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{329:function(s,t,a){"use strict";a.r(t);var n=a(10),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"sql"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql"}},[s._v("#")]),s._v(" SQL")]),s._v(" "),t("h3",{attrs:{id:"select"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#select"}},[s._v("#")]),s._v(" select")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 选择")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查看表的详细信息")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v(" tablename\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 排序")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- desc(descend) 降序")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- asc(ascend) 升序")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 限制")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- limit 20 offset 0    偏移量0 数量20")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" 字段 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("when")]),s._v(" 条件"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" 结果"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("when")]),s._v(" 条件"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" 结果"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 分组")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 条件筛选，只能在 group by 中使用")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 去重")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("distinct")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- distinct 只能出现在所有字段的最前方，会对后面所有字段进行联合去重")]),s._v("\n")])])]),t("h4",{attrs:{id:"注意事项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[s._v("#")]),s._v(" 注意事项")]),s._v(" "),t("ol",[t("li",[s._v("字符串存在隐式转换，如果转换不成功，则为0")]),s._v(" "),t("li",[s._v("表名如果和关键字重名，可以用 ` 包围")]),s._v(" "),t("li",[s._v("case 字段 when 条件1 then 结果1 when 条件2 then 结果2 end")]),s._v(" "),t("li",[s._v("在一条"),t("code",[s._v("select")]),s._v("语句当中，如果有"),t("code",[s._v("group by")]),s._v("语句中的话，"),t("code",[s._v("select")]),s._v("后面只能跟：参加分组的字段，以及分组函数")]),s._v(" "),t("li",[s._v("执行顺序\nfrom -> where -> group by -> having -> select -> order by -> limit")]),s._v(" "),t("li",[s._v("分组函数只有在分组后，才能使用，如：min,max,avg,count")]),s._v(" "),t("li",[t("code",[s._v("where")]),s._v("和"),t("code",[s._v("having")]),s._v("，优先选择"),t("code",[s._v("having")])])]),s._v(" "),t("h3",{attrs:{id:"多表查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多表查询"}},[s._v("#")]),s._v(" 多表查询")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("表连接的方式")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("内连接(表之间没有主次关系)")]),s._v(" "),t("ul",[t("li",[s._v("等值连接")]),s._v(" "),t("li",[s._v("非等值连接")]),s._v(" "),t("li",[s._v("自连接")])])]),s._v(" "),t("li",[t("p",[s._v("外连接")]),s._v(" "),t("ul",[t("li",[s._v("左外连接（左连接，左边的是主表）")]),s._v(" "),t("li",[s._v("右外连接（右连接，右边的是主表）")])])]),s._v(" "),t("li",[t("p",[s._v("全连接")])])])])]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 内连接的等值连接")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v(" 表名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" 条件\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("inner")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v("\n    b\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v("\n    a和b的连接条件\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 外连接的右连接")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\n    e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dname\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("\n    dept d\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("left")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("outer")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v("\n    emp e\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v("\n    d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("deptno\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 连接两个表 ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v("\n\n")])])]),t("h4",{attrs:{id:"注意事项-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意事项-2"}},[s._v("#")]),s._v(" 注意事项")]),s._v(" "),t("ol",[t("li",[s._v("多表选举的时候，指明字段在那个表中可以增加效率，在"),t("code",[s._v("from")]),s._v("中给表起别名")]),s._v(" "),t("li",[s._v("外连接的查询结果条数一定大于内连接的结果条数")])]),s._v(" "),t("h3",{attrs:{id:"建表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#建表"}},[s._v("#")]),s._v(" 建表")]),s._v(" "),t("p",[s._v("数据类型")]),s._v(" "),t("ol",[t("li",[s._v("varchar      可变长度的字符串\n比较智能，节省空间。\n会根据实际的数据长度动态分配空间。\n优点：节省空间\n缺点：需要动态分配空间，速度慢。")]),s._v(" "),t("li",[s._v("char         定长字符串\n不管实际的数据长度是多少。\n分配固定长度的空间去存储数据。\n使用不恰当的时候，可能会导致空间的浪费。\n优点：不需要动态分配空间，速度快。缺点：使用不当可能会导致空间的浪费。")]),s._v(" "),t("li",[s._v("int          数字中的长整型")]),s._v(" "),t("li",[s._v("bigint       数字中的长整型。等同于java中的long。")]),s._v(" "),t("li",[s._v("float        单精度浮点型数据")]),s._v(" "),t("li",[s._v("double       双精度浮点型数据")]),s._v(" "),t("li",[s._v("date         短日期类型，只包括年月日")]),s._v(" "),t("li",[s._v("datetime     长日期类型，包括年月日时分秒")]),s._v(" "),t("li",[s._v("clob         字符大对象\n最多可以存储4G的字符串。\n比如：存储一篇文章，存储一个说明。\n超过255个字符的都要采用CLOB字符大对象来存储。\nCharacter Large OBject:CLOB")]),s._v(" "),t("li",[s._v("b1ob        二进制大对象\nBinary Large OBject专门用来存储图片、声音、视频等流媒体数据。")])]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("now")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 获取系统当前时间")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 跟新表")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 如果没有条件限制，会导致所有数据更新")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" 表名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" 字段名"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("值"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("字段"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("值"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("字段"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("值"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" 条件\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 删除")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 没有条件,整张表都会被删除")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" 条件\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 快速删除")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("truncate")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 不支持回滚")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 快速创建一个表")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" 副本 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 主表"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 删除表")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 执行sql脚本文件")]),s._v("\nsource "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sql")]),s._v("文件\n")])])]),t("h3",{attrs:{id:"约束"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#约束"}},[s._v("#")]),s._v(" 约束")]),s._v(" "),t("p",[s._v("非空约束：not null\n只有列级约束，没有表级约束")]),s._v(" "),t("p",[s._v("唯一性约束：unique")]),s._v(" "),t("p",[s._v("主键约束：primary key(简称PK)\n如果一个字段同时被 not null 和 unique 约束的话，该字段自动变成主键字段")]),s._v(" "),t("p",[s._v("外键约束：foreign key(简称FK)")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 自增")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("auto_increment")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 外键约束")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("foreign")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("字段"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("references")]),s._v(" 主表"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("字段"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("h3",{attrs:{id:"事务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[s._v("#")]),s._v(" 事务")]),s._v(" "),t("p",[s._v("transaction")]),s._v(" "),t("p",[s._v("一个完整的业务逻辑")]),s._v(" "),t("p",[s._v("只有 insert 、delete 、 update 和事务有关")]),s._v(" "),t("p",[s._v("在事务的执行过程中，每一条DML的操作都会记录到事务性活动的日志文件中。\n在事务的执行过程中，我们可以提交事务，也可以回滚事务。")]),s._v(" "),t("p",[s._v("提交事务？\n清空事务性活动的日志文件，将数据全部彻底持久化到数据库表中。\n提交事务标志着，事务的结束。并且是一种全部成功的结束。")]),s._v(" "),t("p",[s._v("回滚事务？\n将之前所有的DL操作全部撤销，并且清空事务性活动的日志文件。\n回滚事务标志着，事务的结束。并且是一种全部失败的结束。")]),s._v(" "),t("p",[s._v("MySQL默认提交事务，每执行一条就提交了，不能回滚")]),s._v(" "),t("hr"),s._v(" "),t("p",[s._v("事务的隔离性")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("读未提交：read uncommitted（最低的隔离级别）《没有提交就读到了》\n什么是读未提交？\n事务A可以读取到事务B未提交的数据。\n这种隔离级别存在的问题就是：\n脏读现象！（Dirty Read）\n我们称读到了脏数据。\n这种隔离级别一般都是理论上的，大多数的数据库隔离级别都是二档起步！")])]),s._v(" "),t("li",[t("p",[s._v("读已提交：read committed《提交之后才能读到》\n什么是读已提交？\n事务A只能读取到事务B提交之后的数据。\n这种隔离级别解决了什么问题？\n解决了脏读的现象。\n这种隔离级别存在什么问题？\n不可重复读取数据。\n什么是不可重复读取数据呢？\n在事务开启之后，第一次读到的数据是3条，当前事务还没有结束，可能第二次再读取的时候，读到的数据是4条，3不等于4称为不可重复读取。\n这种隔离级别是比较真实的数据，每一次读到的数据是绝对的真实。\noracle数据库默认的隔离级别是：read committed")])]),s._v(" "),t("li",[t("p",[s._v("可重复读：repeatable read《提交之后也读不到，永远读取的都是刚开启事务时的数据》\n什么是可重复读取？\n事务A开启之后，不管是多久，每一次在事务A中读取到的数据都是一致的。即使事务B将数据已经修改，并且提交了，事务A读取到的数据还是没有发生改变，这就是可重复读。\n可重复读解决了什么问题？解决了不可重复读取数据。可重复读存在的问题是什么？\n可以会出现幻影读。\n每一次读取到的数据都是幻象。不够真实！\n早晨9点开始开启了事务，只要事务不结束，到晚上9点，读到的数据还是那样！\n读到的是假象。不够绝对的真实。\nmysq1中默认的事务隔离级别就是这个！！！")])]),s._v(" "),t("li",[t("p",[s._v("序列化/串行化：serializable（最高的隔离级别）这是最高隔离级别，效率最低。\n解决了所有的问题。这种隔离级别表示事务排队，不能并发！\nsynchronized，线程同步（事务同步）每一次读取到的数据都是最真实的，并且效率是最低的。")])])]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 手动开启事务,关闭自动提交机制")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("start")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("transaction")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 回滚事务，回到上一次提交")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("rollback")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 提交事务")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 将数据写入数据库 ")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 改变事务隔离级别")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("global")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("transaction")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("isolation")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("level")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("read")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("uncommitted")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    \n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查看事务隔离级别")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" @"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@tx_isolation")]),s._v("\n")])])]),t("h3",{attrs:{id:"索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[s._v("#")]),s._v(" 索引")]),s._v(" "),t("p",[s._v("索引失效的原因")]),s._v(" "),t("ol",[t("li",[s._v("模糊匹配以%开头")]),s._v(" "),t("li",[s._v("使用or,一段有索引,一段没有索引,使用union不会失效")]),s._v(" "),t("li",[s._v("复合索引,没有使用左侧的列查找")]),s._v(" "),t("li",[s._v("索引参加运算")])]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 创建索引")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" emp_ename_index "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 删除索引")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" emp_ename_index "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" emp\n")])])]),t("h3",{attrs:{id:"视图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#视图"}},[s._v("#")]),s._v(" 视图")]),s._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 创建索引")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("view")]),s._v(" emp_view "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);